---
- name: Verificar un servicio en Windows y notificar a Discord si no estÃ¡ corriendo
  hosts: all
  gather_facts: no
  vars:
    servicio_win: Spooler  # Cambia el nombre del servicio si lo necesitas
    discord_webhook_url: "https://discord.com/api/webhooks/1380184228662218914/3tsYzO_Pxp4ouPUjjq8qf1CiPuKZufoJFyIJBcJ84CRsISLP05T8S8RNFpVnlnnJl7J7 "  # Reemplaza con tu webhook real

  tasks:
    - name: Obtener estado del servicio
      win_shell: |
        $service = Get-Service -Name "{{ servicio_win }}"
        $service.Status
      register: service_status
      ignore_errors: yes

    - name: Validar si el servicio existe
      fail:
        msg: "El servicio '{{ servicio_win }}' no se encontrÃ³."
      when: service_status.failed

    - name: Mostrar estado actual del servicio
      debug:
        msg: "Estado actual de '{{ servicio_win }}': {{ service_status.stdout }}"

    - name: Enviar mensaje a Discord usando PowerShell
      win_shell: |
        $webhookUrl = "{{ discord_webhook_url }}"

        $payload = @{
            username = "PowerShell Bot"
            content  = "ðŸ‘‹ Hola mundo desde PowerShell!"
        } | ConvertTo-Json -Depth 3

        Invoke-RestMethod -Uri $webhookUrl -Method Post -Body $payload -ContentType 'application/json'


    - name: Reiniciar el servicio si no estÃ¡ corriendo
      win_service:
        name: "{{ servicio_win }}"
        state: restarted
      when: service_status.stdout.strip() != "Running"
